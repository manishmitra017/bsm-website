name: Deploy BSM Website (Lambda)

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggers

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    # Docker no longer needed for Lambda deployment
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    
    - name: Build frontend for Lambda
      env:
        NODE_ENV: production
        BUILD_LAMBDA: true
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        NEXT_PUBLIC_SITE_URL: "https://bsm.org.au"
        NEXT_PUBLIC_SITE_NAME: "Bengali Society of Melbourne"
        NEXT_PUBLIC_CONTACT_EMAIL: "info@bsm.org.au"
      run: |
        cd frontend
        rm -rf .next
        npm run build
    
    - name: Install AWS CDK CLI
      run: npm install -g aws-cdk
    
    - name: Install CDK dependencies
      run: |
        cd cdk
        npm install
    
    - name: Build CDK project
      run: |
        cd cdk
        npm run build
    
    - name: Cleanup Old ECS Infrastructure
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        CDK_DEFAULT_ACCOUNT: "066043264852"
        CDK_DEFAULT_REGION: "ap-southeast-2"
      run: |
        cd cdk
        # Temporarily add old stack for cleanup
        echo 'import { BsmWebsiteStack } from "../lib/bsm-website-stack";' >> bin/cdk.ts
        echo 'new BsmWebsiteStack(app, "BsmWebsiteStack", { env: { account: process.env.CDK_DEFAULT_ACCOUNT, region: "ap-southeast-2" } });' >> bin/cdk.ts
        npm run build
        cdk destroy BsmWebsiteStack --force || echo "Old stack already removed"
        # Restore CDK configuration
        git checkout bin/cdk.ts
        npm run build

    - name: Deploy Lambda Stack with CDK
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        CDK_DEFAULT_ACCOUNT: "066043264852"
        CDK_DEFAULT_REGION: "ap-southeast-2"
      run: |
        cd cdk
        cdk deploy BsmLambdaStack --require-approval never
    
    - name: Deployment Summary
      run: |
        echo "‚úÖ Lambda deployment completed successfully!"
        echo "üåê Website URL: https://bsm.org.au"
        echo "üåç WWW URL: https://www.bsm.org.au"
        echo "‚ö° Architecture: AWS Lambda + CloudFront"
        echo "üí∞ Cost Optimized: Pay-per-request serverless"
        echo "üìÖ Deployed at: $(date)"